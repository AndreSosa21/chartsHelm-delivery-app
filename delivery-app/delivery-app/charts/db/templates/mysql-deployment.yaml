apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "db.fullname" . }}
  labels:
    app: {{ include "db.name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "db.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "db.name" . }}
    spec:
      containers:
      - name: mysql-db
        image: "{{ .Values.global.db.image.repository }}:{{ .Values.global.db.image.tag }}"
        ports:
        - containerPort: 3306
        env:
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.db.secretName }}
                key: MYSQL_ROOT_PASSWORD
          
          - name: MYSQL_DATABASE
            valueFrom:
              configMapKeyRef:
                name: {{ .Values.global.db.configMap.name }}
                key: DB_NAME
          
          
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.db.secretName }}
                key: DB_USER
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.db.secretName }}
                key: DB_PASSWORD
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: {{ .Values.global.db.persistence.mountPath }}
        readinessProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 10
          periodSeconds: 10
        startupProbe:
          tcpSocket:
            port: 3306
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: {{ .Values.global.db.persistence.name | default "mysql-pvc-delivery" }}